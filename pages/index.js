import Head from 'next/head'
import { useState } from 'react'
import { AppLayout } from '../components/AppLayout'
import { checkWin } from '../helpers'

export default function Home() {
  const [board, setBoard] = useState(new Array(42).fill(''))
  const [player, setPlayer] = useState('X')
  const [win, setWin] = useState(false)
  const [tie, setTie] = useState(false)

  const handleClick = (slotSelected) => {
    if (board[slotSelected] === '') {
      let slotColumn = slotSelected
      let finish = false
      do {
        if (
          board[slotColumn + 7] !== '' ||
          board[slotColumn + 7] === undefined
        ) {
          const newBoard = board
          newBoard[slotColumn] = player
          setBoard(newBoard)
          finish = true
        }
        slotColumn += 7
      } while (!finish)
      const won = checkWin((slotColumn -= 7), board, player)
      setWin(won)
      setTie(!board.some((slot) => slot === ''))
      setPlayer(player === 'X' ? 'O' : 'X')
    }
  }

  const handleRestart = () => {
    setBoard(new Array(42).fill(''))
    setWin(false)
    setTie(false)
  }

  return (
    <>
      <Head>
        <title>Connect 4</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout>
        <section>
          {board.map((slot, index) => (
            <div
              key={index}
              className={slot === '' ? 'empty' : slot === 'X' ? 'blue' : 'red'}
              onClick={() => !win && !tie && handleClick(index)}
            ></div>
          ))}
        </section>
        {win && (
          <>
            <h1>{player === 'X' ? 'RED' : 'BLUE'} WIN</h1>
            <button onClick={handleRestart}>RESTART</button>
          </>
        )}
        {!win && tie && (
          <>
            <h1>TIE</h1>
            <button onClick={handleRestart}>RESTART</button>
          </>
        )}
      </AppLayout>
      <style jsx>{`
        section {
          background: #444444;
          padding: 10px;
          display: grid;
          grid-template-columns: repeat(7, 1fr);
          grid-gap: 10px;
          border-radius: 10px;
        }
        div {
          width: max(5.5vw, 40px);
          height: max(5.5vw, 40px);
          display: flex;
          justify-content: center;
          align-items: center;
          border-radius: 999px;
          margin: max(0.3vw, 1px);
          cursor: pointer;
        }
        .empty {
          background: #e5e1e1;
        }
        .red {
          background: #ff5b5b;
        }
        .blue {
          background: #5b80ff;
        }
        button {
          border: 0;
          border-radius: 10px;
          padding: 10px 20px;
          font-weight: 800;
          cursor: pointer;
        }
        button:hover {
          opacity: 85%;
        }
        button:active {
          transform: scale(97%);
        }
      `}</style>
    </>
  )
}
